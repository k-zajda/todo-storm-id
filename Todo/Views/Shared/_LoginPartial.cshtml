@using Microsoft.AspNetCore.Identity
@using Todo.Services
@using Todo.Services.Abstractions

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject IGravatarService GravatarService

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            <li>
                <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">

                    @{

                        var iu = await UserManager.GetUserAsync(User);
                        var emailAddress = await UserManager.GetEmailAsync(iu);
                        var gravatarUsername = await GravatarService.GetUsernameByEmailAsync(emailAddress);
                    
                        var username = string.IsNullOrEmpty(gravatarUsername)
                            ? UserManager.GetUserName(User)
                            : gravatarUsername;
                    }

                    <img src="https://www.gravatar.com/avatar/@Gravatar.GetHash(emailAddress)?s=30" />
                    @username;
                </a>
            </li>
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Logout</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-area="Identity" asp-page="/Account/Register">Register</a></li>
        <li><a asp-area="Identity" asp-page="/Account/Login">Login</a></li>
    </ul>
}